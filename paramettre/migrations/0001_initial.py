# Generated by Django 4.2.4 on 2023-11-16 14:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Burencadrements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'verbose_name': 'Burencadrements',
                'verbose_name_plural': "Bureau d'encadrement",
            },
        ),
        migrations.CreateModel(
            name='Cartartisants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('nom_prenom', models.CharField(blank=True, max_length=2500, null=True)),
                ('type_carte', models.CharField(blank=True, max_length=1500, null=True)),
                ('date_del', models.CharField(blank=True, max_length=250, null=True)),
                ('date_exp', models.DateField(blank=True, null=True)),
                ('localite', models.CharField(blank=True, max_length=2500, null=True)),
                ('num_tel', models.CharField(blank=True, max_length=1500, null=True)),
                ('num_quit', models.CharField(blank=True, max_length=1500, null=True)),
                ('num_fich_eng', models.CharField(blank=True, max_length=1500, null=True)),
                ('num_carte', models.CharField(blank=True, max_length=1500, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('nom_compt', models.CharField(blank=True, max_length=2500, null=True)),
                ('date_heure', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('nom_categorie', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Categories',
                'verbose_name_plural': 'Categorie',
            },
        ),
        migrations.CreateModel(
            name='Communes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('commune', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Communes',
                'verbose_name_plural': 'Commune',
            },
        ),
        migrations.CreateModel(
            name='Comptoires',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('nom_comptoire', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Comptoires',
                'verbose_name_plural': 'Comptoire',
            },
        ),
        migrations.CreateModel(
            name='Comsites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('code_site', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Code du site')),
                ('date_creation', models.DateField(blank=True, null=True, verbose_name='date creation')),
                ('nom_site', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Nom du site')),
                ('commune', models.CharField(blank=True, max_length=2500, null=True)),
                ('village', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Village')),
                ('nbre_puit_actif', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Nombre de puits actif')),
                ('nbre_puit_total', models.CharField(blank=True, default=0, max_length=2500, null=True, verbose_name='Nombre de puits total')),
                ('annee_exploitation', models.CharField(blank=True, max_length=2500, null=True, verbose_name="Nombre d'année d'exploitation")),
                ('poulation', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Nombre de population approximative')),
                ('nom_detenteur', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Nom du detenteur')),
                ('personne_resource1', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Personne resource 1(Nom et prenom)')),
                ('contact_resource1', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Personne resource 1(Contact)')),
                ('personne_resource2', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Personne resource 2 (Nom et prenom)')),
                ('contact_resource2', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Personne resource 1(Contact)')),
                ('zone', models.IntegerField(blank=True, null=True, verbose_name='Zone de projection')),
                ('longitude', models.CharField(blank=True, max_length=2500, null=True, verbose_name='X')),
                ('latitude', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Y')),
                ('etendu', models.CharField(blank=True, max_length=2500, null=True, verbose_name='Etendu du site en (m)')),
                ('p_chimique', models.BooleanField(blank=True, null=True, verbose_name='Presence de produit chimique')),
                ('p_explosif', models.BooleanField(blank=True, null=True, verbose_name="Presence d'explosif")),
                ('machine', models.TextField(blank=True, null=True, verbose_name='Machine')),
                ('conflit', models.BooleanField(blank=True, null=True, verbose_name='Conflit')),
                ('obs_geo', models.TextField(blank=True, null=True, verbose_name='Observation geologique')),
            ],
            options={
                'verbose_name': 'Comsites',
                'verbose_name_plural': 'Site',
            },
        ),
        migrations.CreateModel(
            name='Comzones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('code_zone', models.CharField(blank=True, max_length=1000, null=True)),
                ('nom_zone', models.CharField(blank=True, max_length=1500, null=True)),
                ('cat_zone', models.CharField(blank=True, max_length=1500, null=True)),
            ],
            options={
                'verbose_name': 'Comzones',
                'verbose_name_plural': 'Zone',
            },
        ),
        migrations.CreateModel(
            name='Demandeconventions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('num_ordre', models.CharField(blank=True, max_length=400, null=True)),
                ('nombre_hectare', models.IntegerField(blank=True, null=True)),
                ('localite', models.CharField(blank=True, max_length=400, null=True, verbose_name='Localité demandé')),
                ('commune', models.CharField(blank=True, max_length=400, null=True)),
                ('identifiaction', models.CharField(blank=True, choices=[('PHYSIQUE', 'PERSONNE PHYSIQUE'), ('MORALE', 'PERSONNE MORALE')], default='PHYSIQUE', max_length=400, null=True)),
                ('demande', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], default='NON', max_length=10, null=True)),
                ('nom_demandeur', models.CharField(blank=True, max_length=400, null=True)),
                ('ref_piece', models.CharField(blank=True, max_length=400, null=True)),
                ('localite_demandeur', models.CharField(blank=True, max_length=400, null=True, verbose_name='Localié du demandeur')),
                ('commune_demandeur', models.CharField(blank=True, max_length=400, null=True, verbose_name='Commune du demandeur')),
                ('pays', models.CharField(blank=True, max_length=400, null=True)),
                ('telephone', models.CharField(blank=True, max_length=400, null=True)),
                ('telephone1', models.CharField(blank=True, max_length=400, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('site_web', models.CharField(blank=True, max_length=350, null=True)),
                ('substances', models.TextField(blank=True, max_length=400, null=True)),
                ('docs', models.FileField(blank=True, null=True, upload_to='uploads', verbose_name='Document Annexes')),
                ('point', models.CharField(blank=True, max_length=50, null=True, verbose_name='Coordonées du site')),
                ('pointforme', models.CharField(blank=True, max_length=500, null=True, verbose_name='Coordonées de la surface')),
                ('nom_convntion', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_depot', models.DateField(blank=True, null=True)),
                ('heure_depot', models.TimeField(blank=True, max_length=150, null=True)),
                ('deposant', models.CharField(blank=True, max_length=400, null=True, verbose_name='Nom du deposant')),
                ('reconnaissance', models.BooleanField(blank=True, default=False, null=True)),
                ('concertation', models.BooleanField(blank=True, default=False, null=True)),
                ('organisation', models.BooleanField(blank=True, default=False, null=True)),
                ('plan_masse', models.BooleanField(blank=True, default=False, null=True)),
                ('pv_constat', models.BooleanField(blank=True, default=False, null=True)),
                ('nbr_puit', models.BigIntegerField(blank=True, null=True)),
                ('nbr_puit_actif', models.BigIntegerField(blank=True, null=True)),
                ('nbr_collecteur', models.BigIntegerField(blank=True, null=True)),
                ('qte_or_puit', models.BigIntegerField(blank=True, null=True)),
                ('qte_or_collecteur', models.BigIntegerField(blank=True, null=True)),
                ('fournisseur', models.BooleanField(blank=True, default=False, null=True)),
                ('exploitant', models.BooleanField(blank=True, default=False, null=True)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='uploads', verbose_name="Document Annexes à l'instruction")),
                ('date_signature', models.DateField(blank=True, null=True)),
                ('date_effet_sign', models.DateField(blank=True, null=True)),
                ('date_exp', models.DateField(blank=True, null=True)),
                ('date_premier_vers', models.DateField(blank=True, null=True)),
                ('date_relance', models.DateField(blank=True, null=True)),
                ('dossiers', models.FileField(blank=True, null=True, upload_to='uploads', verbose_name="Document Annexes à l'instruction")),
                ('statut', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fichenrolements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('nom', models.CharField(blank=True, max_length=1000, null=True)),
                ('prenom', models.CharField(blank=True, max_length=1000, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('localite', models.CharField(blank=True, max_length=1000, null=True)),
                ('telephone', models.CharField(blank=True, max_length=500, null=True)),
                ('telephone2', models.CharField(blank=True, max_length=150, null=True)),
                ('quittance', models.CharField(blank=True, max_length=500, null=True)),
                ('engagement', models.CharField(blank=True, max_length=500, null=True)),
                ('num_carte', models.CharField(blank=True, null=True)),
                ('observation', models.CharField(blank=True, max_length=1000, null=True)),
                ('ref_piece', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ficheprelevements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('date_prelevement', models.DateField(blank=True, null=True)),
                ('commune', models.CharField(blank=True, max_length=2000, null=True)),
                ('point_prelevement', models.CharField(blank=True, max_length=1000, null=True)),
                ('coordonnees', models.CharField(blank=True, max_length=2000, null=True)),
                ('coordonnees_manu', models.CharField(blank=True, max_length=2000, null=True)),
                ('lieu', models.CharField(blank=True, max_length=1500, null=True)),
                ('motif', models.TextField(blank=True, null=True)),
                ('quantite', models.FloatField(blank=True, null=True)),
                ('nombre_flacons_verre', models.IntegerField(blank=True, null=True)),
                ('nombre_flacons_plastique', models.IntegerField(blank=True, null=True)),
                ('type_nature_echant', models.CharField(blank=True, choices=[('eaux', 'eaux'), ('sol', 'sol')], max_length=1000, null=True, verbose_name='Nature echantillon')),
                ('nat_eau', models.CharField(blank=True, choices=[('surface', 'surface'), ('souterrain', 'souterrain')], max_length=1000, null=True, verbose_name='Nature eaux')),
                ('conductivite', models.FloatField(blank=True, null=True)),
                ('ph', models.FloatField(blank=True, null=True)),
                ('tds', models.FloatField(blank=True, null=True)),
                ('oxigene_dissous', models.FloatField(blank=True, null=True)),
                ('turbidite', models.FloatField(blank=True, null=True)),
                ('bruit', models.CharField(blank=True, max_length=1000, null=True)),
                ('odeur', models.CharField(blank=True, max_length=1000, null=True)),
                ('lumiere', models.CharField(blank=True, max_length=1000, null=True)),
                ('nom_preleveur', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Nom et Prenom du preleveur')),
                ('nom_personnes_commandiaire', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Nom et Prenom du commanditaire')),
                ('adresse_personnes_commandiaire', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LigneTypeRapactivitesCarte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Norme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('paramettre', models.CharField(blank=True, max_length=100, null=True)),
                ('valeur', models.FloatField(blank=True, null=True)),
                ('unites', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('numero', models.CharField(blank=True, max_length=1000, null=True)),
                ('nomreg', models.CharField(blank=True, max_length=1000, null=True)),
                ('cheflieu', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Regions',
                'verbose_name_plural': 'Region',
            },
        ),
        migrations.CreateModel(
            name='Statutsites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1500, null=True)),
            ],
            options={
                'verbose_name': 'Statut du sites',
                'verbose_name_plural': 'Statut du site',
            },
        ),
        migrations.CreateModel(
            name='Typautorisations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1500, null=True)),
            ],
            options={
                'verbose_name': 'Typautorisations',
                'verbose_name_plural': "Type d'autorisation",
            },
        ),
        migrations.CreateModel(
            name='Typdemandeurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1500, null=True)),
            ],
            options={
                'verbose_name': 'Typdemandeurs',
                'verbose_name_plural': 'Type demandeur',
            },
        ),
        migrations.CreateModel(
            name='Typecarte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Type de carte',
                'verbose_name_plural': 'Type de carte',
            },
        ),
        migrations.CreateModel(
            name='Typenatureminerais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle_type_nature_minerais', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Typenatureminerais',
                'verbose_name_plural': 'Nature du minerai',
            },
        ),
        migrations.CreateModel(
            name='Typenatureterrains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Typenatureterrains',
                'verbose_name_plural': 'Nature terrain',
            },
        ),
        migrations.CreateModel(
            name='Typeorganisations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Typeorganisations',
                'verbose_name_plural': "Type d'organisation",
            },
        ),
        migrations.CreateModel(
            name='Typeproduitchimiques',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Typeproduitchimiques',
                'verbose_name_plural': 'Type de produit chimique',
            },
        ),
        migrations.CreateModel(
            name='Typequipements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Typequipements',
                'verbose_name_plural': "Type d'equipement",
            },
        ),
        migrations.CreateModel(
            name='Typesites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Typesites',
                'verbose_name_plural': 'Type de site',
            },
        ),
        migrations.CreateModel(
            name='Typetaterrains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('libelle', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Typetaterrains',
                'verbose_name_plural': 'Type de terrain',
            },
        ),
        migrations.CreateModel(
            name='Rapactivites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('periode1', models.DateField(blank=True, null=True, verbose_name='periode du')),
                ('periode2', models.DateField(blank=True, null=True, verbose_name='au')),
                ('nbr_conv', models.IntegerField(blank=True, null=True, verbose_name='nombre de convention')),
                ('nbr_cart_art', models.IntegerField(blank=True, null=True, verbose_name="nombre de carte d'artisant minier")),
                ('autre1', models.TextField(blank=True, null=True, verbose_name='si autre preciser')),
                ('nbr_site', models.IntegerField(blank=True, null=True, verbose_name='nombre de site visité')),
                ('nbr_commite', models.IntegerField(blank=True, null=True, verbose_name='nombre de commité de gestion')),
                ('nbr_site_org', models.IntegerField(blank=True, null=True, verbose_name='nombre de site visité')),
                ('nbr_coop', models.IntegerField(blank=True, null=True, verbose_name='nombre de cooperative')),
                ('nbr_enf', models.IntegerField(blank=True, null=True, verbose_name="nombre d'enfant sur le site")),
                ('mercure', models.CharField(blank=True, max_length=25, null=True, verbose_name='nombre mercure')),
                ('cyanure', models.CharField(blank=True, max_length=25, null=True, verbose_name='nombre cyanure')),
                ('acide', models.CharField(blank=True, max_length=25, null=True, verbose_name='nombre acide')),
                ('borate', models.CharField(blank=True, max_length=25, null=True, verbose_name='nombre boraxe')),
                ('chaux', models.CharField(blank=True, max_length=25, null=True, verbose_name='nombre chaux eteinte')),
                ('explosif', models.CharField(blank=True, max_length=25, null=True, verbose_name='nombre explosif')),
                ('autre', models.TextField(blank=True, null=True)),
                ('nouveau_site', models.IntegerField(blank=True, null=True, verbose_name='nombre nouveaux sites')),
                ('site_ferme', models.IntegerField(blank=True, null=True, verbose_name='nombre sites fermés')),
                ('site_reactive', models.IntegerField(blank=True, null=True, verbose_name='nombre sites reactivés')),
                ('site_rehabilite', models.IntegerField(blank=True, null=True, verbose_name='nombre sites réhabilité')),
                ('minerai', models.CharField(blank=True, max_length=1000, null=True, verbose_name='minerais disponible')),
                ('type_com', models.CharField(blank=True, choices=[('achat', 'achat'), ('vente', 'vente'), ('fonte', 'fonte')], max_length=1000, null=True, verbose_name='Type commercial')),
                ('quantite', models.BigIntegerField(blank=True, null=True)),
                ('obs', models.TextField(blank=True, null=True)),
                ('burencadrement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.burencadrements', verbose_name='BE')),
                ('type_cart_art', models.ManyToManyField(through='paramettre.LigneTypeRapactivitesCarte', to='paramettre.typecarte')),
            ],
        ),
        migrations.CreateModel(
            name='Provinces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('numero', models.CharField(blank=True, max_length=1000, null=True)),
                ('nomprov', models.CharField(blank=True, max_length=500, null=True)),
                ('region_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.regions')),
            ],
            options={
                'verbose_name': 'Provinces',
                'verbose_name_plural': 'Province',
            },
        ),
        migrations.AddField(
            model_name='lignetyperapactivitescarte',
            name='activite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.rapactivites'),
        ),
        migrations.AddField(
            model_name='lignetyperapactivitescarte',
            name='typecarte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.typecarte'),
        ),
        migrations.CreateModel(
            name='LigneTypeCarte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
                ('carte', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.typecarte')),
                ('fiche', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.fichenrolements')),
            ],
        ),
        migrations.CreateModel(
            name='LigneTypeAutorisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('create_at', models.DateField(auto_now_add=True, null=True)),
                ('autorisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.typautorisations')),
                ('demande', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.demandeconventions')),
            ],
        ),
        migrations.CreateModel(
            name='Legend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('image', models.ImageField(help_text='La taille de limage ne doit pas depassé 32x32 pixels.', upload_to='legend_images/')),
                ('type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='paramettre.typesites')),
            ],
            options={
                'verbose_name': 'Legende',
                'verbose_name_plural': 'Legende',
            },
        ),
        migrations.CreateModel(
            name='Formincidents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('commune', models.CharField(blank=True, max_length=400, null=True)),
                ('nom_localite', models.CharField(blank=True, max_length=2500, null=True)),
                ('type_rapport', models.CharField(blank=True, choices=[('accident', 'ACCIDENT'), ('incident', 'INCIDENT')], default='incident', max_length=1500, null=True)),
                ('date_incident', models.DateField(blank=True, null=True)),
                ('heure_incident', models.TimeField(blank=True, null=True)),
                ('zone', models.CharField(blank=True, max_length=2500, null=True)),
                ('lieu', models.CharField(blank=True, max_length=2500, null=True)),
                ('degres', models.CharField(blank=True, choices=[('faible', 'FAIBLE'), ('moyen', 'MOYEN'), ('grave', 'GRAVE'), ('tres_grave', 'TRES GRAVE')], default='MOYEN', max_length=2500, null=True)),
                ('implication', models.CharField(blank=True, choices=[('exploitants', 'exploitants'), ('fournisseur', 'fournisseur'), ('commercants', 'commercants'), ('collecteurs', 'collecteurs'), ('visiteurs', 'visiteurs')], default='MOYEN', max_length=2500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('personne_implique', models.TextField(blank=True, null=True)),
                ('equipement_implique', models.TextField(blank=True, null=True)),
                ('cause', models.TextField(blank=True, null=True)),
                ('action_corrective', models.TextField(blank=True, null=True)),
                ('mesure_de_securite', models.TextField(blank=True, null=True)),
                ('vict_hom', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre Victime Homme')),
                ('vict_fem', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre Victime Femme')),
                ('vict_enf', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre Victime Enfant')),
                ('mort_hom', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre de Mort Homme')),
                ('mort_fem', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre de Mort Femme')),
                ('mort_enf', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre de Mort Enfant')),
                ('nom_site', models.ForeignKey(blank=True, max_length=2500, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.comsites')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.provinces')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.regions')),
            ],
        ),
        migrations.CreateModel(
            name='Formguidautorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('nom_prenom_enqueteur', models.CharField(blank=True, max_length=2500, null=True)),
                ('nom_prenom_autorite', models.CharField(blank=True, max_length=2500, null=True)),
                ('village_site', models.CharField(blank=True, max_length=1000, null=True)),
                ('nom_prenom_ressouce', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_visite', models.DateField(blank=True, null=True)),
                ('com_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.provinces')),
                ('com_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.regions')),
                ('com_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.typesites')),
                ('commune', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.communes')),
                ('nom_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.comsites')),
                ('statut_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.statutsites')),
            ],
        ),
        migrations.CreateModel(
            name='Fichexpminieres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('but_mission', models.TextField(blank=True, null=True)),
                ('date_la_mission', models.DateField(blank=True, null=True)),
                ('commune', models.CharField(blank=True, max_length=300, null=True)),
                ('departement', models.CharField(blank=True, max_length=300, null=True)),
                ('village', models.CharField(blank=True, max_length=300, null=True)),
                ('distance1', models.FloatField(blank=True, max_length=300, null=True, verbose_name='Distence entre le site et les habitations')),
                ('distance2', models.FloatField(blank=True, max_length=300, null=True, verbose_name="Distence entre le site et les cours d'eaux")),
                ('q9', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=300, null=True, verbose_name='Presence de champs ou culture?')),
                ('q12', models.CharField(blank=True, choices=[('nouveau', 'Nouveau'), ('ancien', 'Ancien'), ('reconnu', 'Reconnu ou non'), ('organise', 'Organisé ou non'), ('insatnce', 'Dossier en instance')], max_length=300, null=True, verbose_name='Situation administrative')),
                ('q13', models.CharField(blank=True, max_length=300, null=True, verbose_name='Si en instance precisez son auteur et son etape')),
                ('d_octroi', models.DateField(blank=True, max_length=300, null=True, verbose_name="Date d'octroi")),
                ('d_renouv', models.DateField(blank=True, max_length=300, null=True, verbose_name='Date de renouvelmenet')),
                ('d_fin', models.DateField(blank=True, max_length=300, null=True, verbose_name='Date de fin')),
                ('adresse', models.CharField(blank=True, max_length=300, null=True)),
                ('q19', models.TextField(blank=True, max_length=300, null=True, verbose_name='Membre de commité rencontré')),
                ('q21', models.TextField(blank=True, max_length=300, null=True, verbose_name='Personne rencontré')),
                ('q25', models.IntegerField(blank=True, null=True, verbose_name='Nombre de site artisanal environnant officiel (rayon de 30km)')),
                ('q26', models.IntegerField(blank=True, null=True, verbose_name="Nombre de site d'exloiation environnant (rayon de 30km)")),
                ('q27', models.IntegerField(blank=True, null=True, verbose_name='Nombre de site artisanal environnant non organisés (rayon de 30km)')),
                ('q28', models.IntegerField(blank=True, null=True, verbose_name='Population')),
                ('nb_e_site', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'enfant de moin de 18 ANS")),
                ('nb_es_site', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'elèves rencontrés")),
                ('nb_exploitant', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'exploiatant")),
                ('nb_collecteurs', models.IntegerField(blank=True, null=True, verbose_name='Nombre de collecteur')),
                ('q33', models.IntegerField(blank=True, null=True, verbose_name='Nombre de fournisseur de service')),
                ('q34', models.IntegerField(blank=True, null=True, verbose_name='Nombre de detenteur de carte')),
                ('q35', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'intermediares")),
                ('q36', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'emplois directe générés")),
                ('q37', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'emplois indirect générés")),
                ('q38', models.IntegerField(blank=True, null=True, verbose_name="Superficie du site(zone d'extration plus zone de traitement)")),
                ('q39', models.IntegerField(blank=True, null=True, verbose_name="Repartition de l'espace en zone")),
                ('q40', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'association")),
                ('q50', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'association non organisées")),
                ('q51', models.IntegerField(blank=True, null=True, verbose_name='Nombre de copperative')),
                ('q52', models.IntegerField(blank=True, null=True, verbose_name='Nombre de PEA')),
                ('q53', models.IntegerField(blank=True, null=True, verbose_name='Nombre de puit à grand diametre')),
                ('q54', models.IntegerField(blank=True, null=True, verbose_name='Nombre de AEPS')),
                ('q55', models.IntegerField(blank=True, null=True, verbose_name='Nombre de barrage')),
                ('q57', models.IntegerField(blank=True, null=True, verbose_name='Nombre de paille')),
                ('q58', models.IntegerField(blank=True, null=True, verbose_name='Nombre de semi dure(banco)')),
                ('q60', models.IntegerField(blank=True, null=True, verbose_name='Nombre de parpaings')),
                ('q61', models.IntegerField(blank=True, null=True, verbose_name='Nombre de csps')),
                ('q62', models.IntegerField(blank=True, null=True, verbose_name='Nombre de cm')),
                ('q63', models.IntegerField(blank=True, null=True, verbose_name='Nombre de cma')),
                ('q65', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'ecole primaire")),
                ('q66', models.IntegerField(blank=True, null=True, verbose_name='Nombre de CEG')),
                ('q67', models.IntegerField(blank=True, null=True, verbose_name='Nombre de qantine')),
                ('q69', models.IntegerField(blank=True, null=True, verbose_name='Nombre de bibliotheque')),
                ('q71', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'Autre insfrasctures(moqués)")),
                ('q72', models.IntegerField(blank=True, null=True, verbose_name="Nombre 'Autre insfrasctures(eglise)")),
                ('type_conflit', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Type conflit')),
                ('cause_conflit', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Cause')),
                ('rapport_promoteur_orpailleurs', models.CharField(blank=True, choices=[('BON', 'BON'), ('TENSION', 'TENSION')], max_length=2000, null=True, verbose_name='Rapport promoteur/Artisan')),
                ('rapport_promoteur_population', models.CharField(blank=True, choices=[('BON', 'BON'), ('TENSION', 'TENSION')], max_length=2000, null=True, verbose_name='Rapport promoteur/Population')),
                ('activites_promoteur', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Activité méné par le promoteur')),
                ('difficultes_promoteur', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Difficulté rencontré par le promoteur')),
                ('q78', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Appréciation des populations /Autorités')),
                ('Flag_Exhaure', models.CharField(blank=True, max_length=2000, null=True, verbose_name="Presence d'exhaure")),
                ('nb_puits_exhaure', models.CharField(blank=True, max_length=2000, null=True, verbose_name="Nombre de puit faisant l'obejt d'exhaure")),
                ('duree_moy_pompage', models.CharField(blank=True, max_length=2000, null=True, verbose_name="Durée moyenne de pommpage d'eaux  de la nappe par puits par semaine")),
                ('quantite_moy_eau_pompee_heure', models.CharField(blank=True, max_length=2000, null=True, verbose_name="Durée moyenne de pommpage d'eaux par heure")),
                ('type_equipement', models.TextField(blank=True, null=True, verbose_name='Equipement utilisés (quantité, qualité, provenance)')),
                ('q85', models.CharField(blank=True, max_length=2000, null=True, verbose_name="Type d'Aeration")),
                ('q86', models.CharField(blank=True, max_length=2000, null=True, verbose_name="Type d'Eclairage")),
                ('q87', models.IntegerField(blank=True, null=True, verbose_name='Nombre de trous aerés')),
                ('type_equipement_aeration', models.TextField(blank=True, null=True, verbose_name="Equipement utilisés pour l'aeration (nom quantité, qualité, provenance)")),
                ('type_equipement_eclairage', models.TextField(blank=True, null=True, verbose_name="Equipement utilisés pour l'aeration (nom quantité, qualité, provenance)")),
                ('q96', models.TextField(blank=True, null=True, verbose_name="Equipement utilisés pour l'etrationdu minerai (nom quantité, qualité, provenance)")),
                ('q97', models.TextField(blank=True, null=True, verbose_name='Equipement utilisés pour la remonté du minerai (nom quantité, qualité, provenance)')),
                ('q98', models.TextField(blank=True, null=True, verbose_name='Equipement utilisés pour la remonté du steril (nom quantité, qualité, provenance)')),
                ('q99', models.TextField(blank=True, null=True, verbose_name="Produi chimique (nom provencance, procédé d'utilisation)")),
                ('type_nature_minerais', models.CharField(blank=True, max_length=200, null=True, verbose_name='type de minerais')),
                ('provenance8', models.CharField(blank=True, max_length=200, null=True, verbose_name='Provenance du minerai')),
                ('processus_traitement', models.CharField(blank=True, max_length=200, null=True, verbose_name='Process de traitement')),
                ('qe130', models.DateField(blank=True, null=True, verbose_name="Date d'entré en produit")),
                ('prod_mensuelle_or', models.FloatField(blank=True, null=True, verbose_name="Date d'entré en produit")),
                ('q131', models.CharField(blank=True, max_length=200, null=True, verbose_name="Destination de l'or")),
                ('q132', models.FloatField(blank=True, null=True, verbose_name='Tonage des rejet de produits')),
                ('taxe_annuel', models.CharField(blank=True, max_length=200, null=True, verbose_name="Destination de l'or")),
                ('paiement', models.CharField(blank=True, max_length=200, null=True, verbose_name='Taxe anuelle')),
                ('distance7', models.FloatField(blank=True, null=True, verbose_name="Distance moyenne des sources d'approvisonnement en eaux")),
                ('distance8', models.FloatField(blank=True, null=True, verbose_name='Distance moyenne des postes de santé')),
                ('distance9', models.FloatField(blank=True, null=True, verbose_name='Distance moyenne des postes de securité')),
                ('distance10', models.FloatField(blank=True, null=True, verbose_name='Distance moyenne avec les ecoles')),
                ('nb_puits2', models.IntegerField(blank=True, null=True, verbose_name='Nombre de puits artisanal productif')),
                ('nb_puits3', models.IntegerField(blank=True, null=True, verbose_name='Nombre de puits artisanal abandonné')),
                ('q142', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Respect des date d'interdiction")),
                ('q149', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Port des ecquipement de portection')),
                ('q150', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Consommation de stupefiants')),
                ('q151', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Postitution')),
                ('q152', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Postitution infantile')),
                ('q153', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Délinquance')),
                ('q154', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Criminalité')),
                ('q155', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Utilisation d'explosif")),
                ('q156', models.IntegerField(blank=True, null=True, verbose_name="Nombre de boutique d'alcool")),
                ('q157', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'explositifs accidentel")),
                ('q158', models.FloatField(blank=True, null=True, verbose_name='Superficie du site')),
                ('q159', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Site protégé ')),
                ('q161', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='site à haute valeur de conservation')),
                ('q163', models.FloatField(blank=True, null=True, verbose_name='Superficie pertubée')),
                ('nb_arbre_coupe', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'arbre coupé")),
                ('nb_arbre_reboise', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'arbre reboisé")),
                ('nb_arbre_survecu', models.CharField(blank=True, max_length=200, null=True, verbose_name="Nombre d'arbre reboisé ayant survecu")),
                ('qe166', models.CharField(blank=True, choices=[('tres_faible', 'Très faible'), ('faible', 'faible'), ('moyen', 'moyen'), ('assez_eleve', ' Assez élevé'), ('eleve', 'élevé'), ('tres_eleve', '  Très élevé')], max_length=200, null=True, verbose_name="Niveau d'utilisation du cyanure")),
                ('q167', models.CharField(blank=True, choices=[('tres_faible', 'Très faible'), ('faible', 'faible'), ('moyen', 'moyen'), ('assez_eleve', ' Assez élevé'), ('eleve', 'élevé'), ('tres_eleve', '  Très élevé')], max_length=200, null=True, verbose_name="Niveau d'utilisation du mercure")),
                ('q168', models.CharField(blank=True, choices=[('tres_faible', 'Très faible'), ('faible', 'faible'), ('moyen', 'moyen'), ('assez_eleve', ' Assez élevé'), ('eleve', 'élevé'), ('tres_eleve', '  Très élevé')], max_length=200, null=True, verbose_name="Niveau d'utilisation du acide")),
                ('q169', models.CharField(blank=True, choices=[('tres_faible', 'Très faible'), ('faible', 'faible'), ('moyen', 'moyen'), ('assez_eleve', ' Assez élevé'), ('eleve', 'élevé'), ('tres_eleve', '  Très élevé')], max_length=200, null=True, verbose_name="Niveau d'emmission de la poussiere")),
                ('q170', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Presence d'hydrocarbure")),
                ('q171', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Presence d'Eau de l'amalgamationor-mercure")),
                ('q172', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Presence d'Eau de cyanure")),
                ('q173', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Presence de bassin de cyanure')),
                ('q174', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Presence d'eau usée dans les espace de traitement")),
                ('q175', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name="Presence  d'eau usée menagère")),
                ('q176', models.CharField(blank=True, max_length=200, null=True, verbose_name='Presence dordure menagère')),
                ('q177', models.CharField(blank=True, max_length=200, null=True, verbose_name="Presence d'excreta")),
                ('q178', models.CharField(blank=True, choices=[('OUI', 'oui'), ('NON', 'non')], max_length=200, null=True, verbose_name='Bonne acceuil du promoteur')),
                ('q179', models.CharField(blank=True, max_length=200, null=True, verbose_name='Qualité des informations receuilli')),
                ('q180', models.TextField(blank=True, null=True, verbose_name='Commentaire')),
                ('nom_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.comsites')),
                ('province', models.ForeignKey(blank=True, max_length=300, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.provinces')),
                ('region', models.ForeignKey(blank=True, max_length=300, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.regions')),
            ],
        ),
        migrations.CreateModel(
            name='Fichevisites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('identifiant', models.IntegerField(blank=True, null=True)),
                ('date_visite', models.DateField(blank=True, null=True)),
                ('date_miss', models.DateField(blank=True, null=True)),
                ('nom_des_visiteurs', models.TextField(blank=True, max_length=2000, null=True)),
                ('qualite', models.CharField(blank=True, max_length=1500, null=True)),
                ('service', models.CharField(blank=True, max_length=1500, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('nbr_hom', models.IntegerField(blank=True, null=True)),
                ('nbr_fem', models.IntegerField(blank=True, null=True)),
                ('nbr_enfant', models.IntegerField(blank=True, null=True)),
                ('bureau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.burencadrements')),
                ('com_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.provinces')),
                ('com_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.regions')),
                ('com_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.typesites')),
                ('commune', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.communes')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.comsites')),
            ],
        ),
        migrations.AddField(
            model_name='fichenrolements',
            name='type_carte',
            field=models.ManyToManyField(through='paramettre.LigneTypeCarte', to='paramettre.typecarte'),
        ),
        migrations.AddField(
            model_name='demandeconventions',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='province1', to='paramettre.provinces', verbose_name='Province demandé'),
        ),
        migrations.AddField(
            model_name='demandeconventions',
            name='province_demandeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='province2', to='paramettre.provinces', verbose_name='Province du demandeur'),
        ),
        migrations.AddField(
            model_name='demandeconventions',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='region1', to='paramettre.regions', verbose_name='Region demandé'),
        ),
        migrations.AddField(
            model_name='demandeconventions',
            name='region_demandeur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='region2', to='paramettre.regions', verbose_name='Region du demandeur'),
        ),
        migrations.AddField(
            model_name='demandeconventions',
            name='type_autorisation',
            field=models.ManyToManyField(through='paramettre.LigneTypeAutorisation', to='paramettre.typautorisations'),
        ),
        migrations.AddField(
            model_name='comsites',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.provinces', verbose_name='Province'),
        ),
        migrations.AddField(
            model_name='comsites',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.regions', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='comsites',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.statutsites', verbose_name='Stut de site'),
        ),
        migrations.AddField(
            model_name='comsites',
            name='typesite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.typesites', verbose_name='Type de site'),
        ),
        migrations.AddField(
            model_name='communes',
            name='province_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.provinces'),
        ),
        migrations.CreateModel(
            name='Analyse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('created', models.DateField(auto_created=True, auto_now_add=True, null=True)),
                ('conductivite', models.FloatField(blank=True, null=True)),
                ('ph', models.FloatField(blank=True, null=True)),
                ('tds', models.FloatField(blank=True, null=True)),
                ('oxigene_dissous', models.FloatField(blank=True, null=True)),
                ('turbidite', models.FloatField(blank=True, null=True)),
                ('bruit', models.CharField(blank=True, max_length=1000, null=True)),
                ('odeur', models.CharField(blank=True, max_length=1000, null=True)),
                ('lumiere', models.CharField(blank=True, max_length=1000, null=True)),
                ('prelevement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paramettre.ficheprelevements')),
            ],
        ),
    ]
